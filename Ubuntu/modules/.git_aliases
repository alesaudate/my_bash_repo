#!/bin/bash

###########
### GIT ###
###########

alias status="git status"
alias current-branch="git branch | grep \* | cut -d ' ' -f2"
alias pull="current-branch | xargs git pull origin"
alias push="current-branch | xargs git push origin"
alias fpush="current-branch | xargs git push origin -f"

files-affected() {
        local currentBranch=$(current-branch)
        local containsDevBranch=$(git branch -a | grep dev)
        if [ -z "$containsDevBranch" ]; then
                git diff --name-only origin/develop..$currentBranch
        else
                git diff --name-only origin/master..$currentBranch
        fi
}


alias master="git checkout master; pull"
alias main="git checkout main; pull"
alias develop="git checkout develop; pull"
alias add="git add -A . ; status"
alias amend="git commit --amend --no-edit"
alias checkout="git checkout ."
alias patch="add && amend"


store() {
        git config credential.helper store
}


git(){
  case "$1" in clone) git-clone "${@:2}";; *) command git "$@";; esac
}

git-clone(){
   local tgt
   tgt=$(command git clone "$@" 2> >(tee /dev/stderr |head -n1 | cut -d \' -f2)) ||
      return $?
   cd "$tgt" || exit
   store
}

cm(){
  PREFIX=$(current-branch | cut -d '/' -f 2)
  git commit -m "$PREFIX $@"
}

git-clone(){
   local tgt
   tgt=$(command git clone "$@" 2> >(tee /dev/stderr |head -n1 | cut -d \' -f2)) ||
      return $?
   cd "$tgt" || exit
   store
}

cm(){
  PREFIX=$(current-branch | cut -d '/' -f 2)
  git commit -m "$PREFIX $@"
}

# Part based on https://thucnc.medium.com/how-to-show-current-git-branch-with-colors-in-bash-prompt-380d05a24745

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}


TERMINAL_CONTAINS_GIT=$(echo $PS1 | grep git)

if [ -z "$TERMINAL_CONTAINS_GIT" ]; then
	export PS1="$PS1\[\e[91m\]\$(parse_git_branch)\[\e[00m\]\$ "
fi
